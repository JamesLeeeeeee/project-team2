class Naver_crawler_01:
    
    global nos
    global subjects
    global subsubjects
    global contents
    global sources
    nos=[]
    subjects=[]
    subsubjects=[]
    contents=[]
    sources=[]
        
    def install(self):
        !pip install bs4
        !pip install pandas
        !pip install selenium
        
    def web(self):
#모듈 
        from bs4 import BeautifulSoup
        from selenium import webdriver
        import time
        
#경로설정과 인터넷 창 열기        
        self.path='c:\python_temp\chromedriver.exe'
        options=webdriver.ChromeOptions()
        options.add_argument('start-maximized')
        self.driver=webdriver.Chrome(self.path,options=options)
        self.driver.get('https://www.naver.com')
        time.sleep(1)
#검색어 입력        
#         self.query=input('검색어를 입력하세요 : ')
        
        search=self.driver.find_element_by_xpath('//*[@id="query"]')
        from selenium.webdriver.common.keys import Keys

        search.send_keys(self.query)
        search.send_keys(Keys.ENTER)
        time.sleep(1)
        html=self.driver.page_source
        self.soup=BeautifulSoup(html,'html.parser')
        
    def ency(self):
        from bs4 import BeautifulSoup
        from selenium import webdriver
        import time
        encyclopedia=self.soup.find_all('section','sc_new sp_nkindic _au_kindic_collection')
        self.nos=[]
        self.subjects=[]
        self.subsubjects=[]
        self.contents=[]
        self.sources=[]
        
        #지식백과가 없을 시
        if len(encyclopedia)==0:
            self.driver.find_element_by_xpath('//*[@id="_nx_lnb_more"]/a').click()
            time.sleep(1)
            self.driver.find_element_by_xpath('//*[@id="_nx_lnb_more"]/div/ul/li[2]/a').click()
            encyclopedia=self.soup.find_all('div','nkindic_area')
            print()
            self.cnt=0
            while self.cnt<=0:
                try:
                    self.cnt=int(input("크롤링할 페이지는 몇 페이지 입니까?: "))
                    print()
                    if self.cnt<=0:
                        print("1부터 입력가능합니다.")
                        print()
                        continue
                except:
                    print("1이상의 숫자로 입력해주세요.")
                    print()
                    continue
                
            print()
            print('='*80)
            no=1
            count=1
            for x in range(1,self.cnt+1):
                html=self.driver.page_source
                soup=BeautifulSoup(html,'html.parser')
                encyclopedia=soup.find_all('div','nkindic_area')

                for i in encyclopedia:
                    subject=i.find_all('div','nkindic_tit _svp_content')
                    for j in subject:
                        content=i.find('div','api_txt_lines desc')
                        source=i.find('span','source_txt')
                        print('번호:',no)
                        self.nos.append(no)
                        print("제목:",j.text.strip())
                        self.subjects.append(j.text.strip())
                        print("내용:",content.text.strip())
                        self.contents.append(content.text.strip())
                        print("출처:",source.text.strip())
                        self.sources.append(source.text.strip())
                        print()
                        no+=1
                if self.cnt>count:
                    self.driver.find_element_by_xpath('//*[@id="main_pack"]/div[2]/div/a[2]').click()
                    count+=1
                    print(f'-------------------{count}번째 페이지입니다.---------------')
                    time.sleep(1)
        #지식백과가 있을 시
        else:
            no=1
            count=1
            for i in encyclopedia:
                title=i.find_all('div','nkindic_tit _svp_content')
                content=i.find_all('div','api_txt_lines desc')
                source=i.find_all('div','nkindic_source')
                d=0
                for a in title:
                    b=a.find_all('a')
                    print()
                    print('번호:',no)
                    self.nos.append(no)
                    print('1.제목:',b[0].text)    
                    self.subjects.append(b[0].text)
                    if len(b)>1:
                        print('부제목:',b[1].text)
                        self.subsubjects.append(b[1].text)
                        print('내용:',content[d].text)
                        self.contents.append(content[d].text)
                        print('출처:',source[d].text.strip())
                        self.sources.append(source[d].text)
                        print()
                    else:
                        print('부제목:','')            #부제목 없을시
                        print('내용:',content[d].text)
                        self.contents.append(content[d].text)
                        print('출처:',source[d].text.strip())
                        self.sources.append(source[d].text.strip())
                        print()
                    d+=1
                    no+=1
    
    def ency_text(self):
        from bs4 import BeautifulSoup
        from selenium import webdriver
        import time
        self.driver.find_element_by_xpath('//*[@id="main_pack"]/div[2]/div/div/a[1]').click()
        time.sleep(1)
        encyclopedia=self.soup.find_all('div','nkindic_area')
        print()
        no=1
        count=1
        for x in range(1,self.cnt+1):
            html=self.driver.page_source
            soup=BeautifulSoup(html,'html.parser')
            encyclopedia=soup.find_all('div','nkindic_area')

            for i in encyclopedia:
                subject=i.find_all('div','nkindic_tit _svp_content')
                for j in subject:
                    content=i.find('div','api_txt_lines desc')
                    source=i.find('span','source_txt')
                    print('번호:',no)
                    print("제목:",j.text.strip())
                    print("내용:",content.text.strip())
                    print("출처:",source.text.strip())
                    print()
                    no+=1
            if self.cnt>count:
                self.driver.find_element_by_xpath('//*[@id="main_pack"]/div[2]/div/a[2]').click()
                count+=1
                print(f'-------------------{count}번째 페이지입니다.---------------')
                time.sleep(1)

    def sections_(self):
        self.sections={1:'VIEW',2:'NEWS',3:'카페글',4:'지식백과',5:'어학사전'}
#         self.filename={1:'VIEW',2:'NEWS',3:'Cafe',4:'지식백과',5:'어학사전'}
        self.saves={1:'txt',2:'csv',3:'xls'}
    
                    
    def run(self):
        print("="*90)
        print(f'{"네이버크롤러 version 1.0": ^65}')
        print("="*90)
        
        self.query=input(f'{" 검색어를 입력해주세요: ":>10}')
        
        self.web()
        re=0
        while True:
            if re>0:
                try:
                    re_search=int(input(' 추가로 검색하시겠습니까? 1:예/ 2:아니오 : '))
                    print()
                    if re_search==1:
                        self.driver.quit()
                        self.query=input(f'{" 검색어를 입력해주세요: ":>10}')
                        #저장 리스트 초기화
                        self.nos.clear()
                        self.subjects.clear()
                        self.subsubjects.clear()
                        self.contents.clear()
                        self.sources.clear()
                        self.web()
                    elif re_search==2:
                        print('=-'*50)
                        print(' 네이버크롤러를 종료합니다.')
                        print('=-'*50)
                        self.driver.quit()
                        break
                    else:
                        print(" 1 또는 2 숫자로 입력해주십시오.")
                        print()
                        continue
                except:
                    print()
                    print(' 1 또는 2 숫자로 입력해주십시오')
                    continue
            re+=1
            print("="*90)
            self.section=int(input(""" [메뉴]1.view 2.뉴스 3.카페글 4.지식백과 5.어학사전 (종료:0)
            
 원하시는 메뉴를 선택해주세요(숫자로 입력받습니다.) : """))
            if self.section==0:
                print(' 웹브라우져 종료합니다.')
                driver.quit()                
                break
            self.sections_()
            print("="*90)
            print(' {}섹션의 "{}"으로 수집된 데이터를 추출합니다.' .format(self.sections[self.section], self.query))
            try:
                if self.section==1:
                    pass
                elif self.section==2:
                    pass
                elif self.section==3:
                    pass
                elif self.section==4:
                    self.ency()
                    self.save()
                elif self.section==5:
                    pass
                elif self.section<=0 or self.section>5:
                    print(" 1부터 5까지 입력가능합니다.")
                    print()
                    continue
            except ValueError:
                print(' 1부터 5까지 입력가능합니다.')
                print()
                continue
            
    def save(self):
        import sys
        import pandas as pd
        import xlwt
        import time
        date=time.strftime('%Y-%m-%d', time.localtime(time.time()))
        self.sections_()
        while True:
            
            print('='*80)
            try:
                y_n=input(' 추출된 데이터를 파일로 저장하시겠습니까?(y/n)> ')
                print('='*80)
            
                if y_n=='y' or y_n=='Y' or y_n=='yes' or y_n=='YES' or y_n=='Yes':
                    
                    
#저장경로입력            
                    try:
                        f_=input(' 저장경로를 입력해주세요.\n 예: c:\python_temp\data\\\n ')
                        print('='*80)
                        if f_=='' or f_==' ':
                            print(' 저장경로를 정확히 입력해주세요.')
                    
                        elif f_.isdigit():
                            print(' 저장경로를 정확히 입력해주세요.')
                    except FileNotFoundError:
                        print(' 저장경로를 정확히 입력해주세요.')
                        continue
                        
                    
                    
                    to_save=int(input(''' [메뉴]1.txt 2.csv 3.xls (종료:0)
                
 저장하실 번호를 선택해주세요 : '''))
                    print('='*80)
#저장X                
                    if to_save==0:
                        print(' 처음화면으로 돌아갑니다.')
                        print()
                        break
                    
#txt저장                    
                    elif to_save==1:
                        self.sections_()
                        f_name=f_+date+'-'+self.query+'-'+self.filename[self.section]+'.'+self.saves[1]
                        stdout=sys.stdout
                        f=open(f_name,'a',encoding='utf-8')
                        sys.stdout=f
                        if self.section==1: #view
                            pass
                        elif self.section==2: #뉴스
                            pass
                        elif self.section==3: #cafe
                            pass
                        elif self.section==4: #백과사전
                            if self.cnt>=1:
                                self.ency_text()
                            else:
                                try:
                                    self.ency()
                                except:
                                    self.ency_text()
                                
                        elif self.section==5: #어학사전
                            pass
                        f.close()
                        sys.stdout=stdout
                        print()
                        print(f_name+'로 저장했습니다.')
                        print()
                        continue
                    
                
                    elif to_save==2 or to_save==3:
                        nav_save=pd.DataFrame()
                        nav_save['번호']=self.nos
                        nav_save['제목']=self.subjects
                        try:
                            nav_save['부제목']=self.subsubjects
                        except:
                            pass
                        nav_save['내용']=self.contents
                        nav_save['출처']=self.sources
#csv저장                    
                        if to_save==2:
                            csv_name=f_+date+'-'+self.query+'-'+self.sections[self.section]+'.'+self.saves[2]
                            nav_save.to_csv(csv_name,encoding='utf-8-sig')
                            print()
                            print(csv_name+'로 저장했습니다.')
                            print()
                            continue
                        
#xls저장                    
                        if to_save==3:
                            xls_name=f_+date+'-'+self.query+'-'+self.sections[self.section]+'.'+self.saves[3]
                            nav_save.to_excel(xls_name,encoding='utf-8-sig')
                            print()
                            print(xls_name+'로 저장했습니다.')
                            print()
                            continue
                            
                        
                        
                elif y_n=='n' or y_n=='N' or y_n=='no' or y_n=='NO' or y_n=='No':
                    print()
                    print(' 처음화면으로 돌아갑니다.')
                    print()
                    print('='*80)
                    break
                
                else:
                    print()
                    print(' Y 또는 N으로 입력해주세요')
                    print()
                    continue
                
            except Exception as e:
                print()
                print(" 정확하게 입력해주세요.")
                print()
                continue
